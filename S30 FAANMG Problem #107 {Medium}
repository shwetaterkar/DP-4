class Solution(object):
    def maxSumAfterPartitioning(self, arr, k):
        """
        :type arr: List[int]
        :type k: int
        :rtype: int
        """
        dp= [0]*len(arr)
        dp[0]=arr[0]
        
        for i in range(1,len(dp)):
            print(i)
            m=dp[i]
            j=1
            while(j<=k and i-j+1>=0):
                m = max(m,arr[i-j+1])
                if(i-j)>=0:
                    dp[i]=max(dp[i],dp[i-j]+m*j)
                else:
                    dp[i]=max(dp[i],m*j)  #edge condition for first trio
                j+=1
                
        return dp[len(dp)-1]
